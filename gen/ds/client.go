// Code generated by goa v3.11.3, DO NOT EDIT.
//
// ds client
//
// Command:
// $ goa gen ds/design

package ds

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "ds" service client.
type Client struct {
	ListEndpoint     goa.Endpoint
	CompleteEndpoint goa.Endpoint
	DemoEndpoint     goa.Endpoint
}

// NewClient initializes a "ds" service client given the endpoints.
func NewClient(list, complete, demo goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:     list,
		CompleteEndpoint: complete,
		DemoEndpoint:     demo,
	}
}

// List calls the "list" endpoint of the "ds" service.
func (c *Client) List(ctx context.Context) (res AccountMgmtCollection, err error) {
	var ires any
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(AccountMgmtCollection), nil
}

// Complete calls the "complete" endpoint of the "ds" service.
func (c *Client) Complete(ctx context.Context, p *CompletePayload) (res *UserResource, err error) {
	var ires any
	ires, err = c.CompleteEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UserResource), nil
}

// Demo calls the "demo" endpoint of the "ds" service.
func (c *Client) Demo(ctx context.Context, p *DemoPayload) (res int, err error) {
	var ires any
	ires, err = c.DemoEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}
