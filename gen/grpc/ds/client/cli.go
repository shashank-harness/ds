// Code generated by goa v3.11.3, DO NOT EDIT.
//
// ds gRPC client CLI support package
//
// Command:
// $ goa gen ds/design

package client

import (
	ds "ds/gen/ds"
	dspb "ds/gen/grpc/ds/pb"
	"encoding/json"
	"fmt"
)

// BuildDemoPayload builds the payload for the ds demo endpoint from CLI flags.
func BuildDemoPayload(dsDemoMessage string) (*ds.DemoPayload, error) {
	var err error
	var message dspb.DemoRequest
	{
		if dsDemoMessage != "" {
			err = json.Unmarshal([]byte(dsDemoMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"a\": 1354738080030677706,\n      \"b\": 9222282917469029784\n   }'")
			}
		}
	}
	v := &ds.DemoPayload{
		A: int(message.A),
		B: int(message.B),
	}

	return v, nil
}
