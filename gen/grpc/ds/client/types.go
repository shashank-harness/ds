// Code generated by goa v3.11.3, DO NOT EDIT.
//
// ds gRPC client types
//
// Command:
// $ goa gen ds/design

package client

import (
	ds "ds/gen/ds"
	dsviews "ds/gen/ds/views"
	dspb "ds/gen/grpc/ds/pb"
)

// NewProtoListRequest builds the gRPC request type from the payload of the
// "list" endpoint of the "ds" service.
func NewProtoListRequest() *dspb.ListRequest {
	message := &dspb.ListRequest{}
	return message
}

// NewListResult builds the result type of the "list" endpoint of the "ds"
// service from the gRPC response type.
func NewListResult(message *dspb.AccountMgmtCollection) dsviews.AccountMgmtCollectionView {
	result := make([]*dsviews.AccountMgmtView, len(message.Field))
	for i, val := range message.Field {
		result[i] = &dsviews.AccountMgmtView{
			UUID:        &val.Uuid,
			Clusterurl:  &val.Clusterurl,
			Accountname: &val.Accountname,
		}
		id := int(val.Id)
		result[i].ID = &id
	}
	return result
}

// NewProtoDemoRequest builds the gRPC request type from the payload of the
// "demo" endpoint of the "ds" service.
func NewProtoDemoRequest(payload *ds.DemoPayload) *dspb.DemoRequest {
	message := &dspb.DemoRequest{
		A: int32(payload.A),
		B: int32(payload.B),
	}
	return message
}

// NewDemoResult builds the result type of the "demo" endpoint of the "ds"
// service from the gRPC response type.
func NewDemoResult(message *dspb.DemoResponse) int {
	result := int(message.Field)
	return result
}
