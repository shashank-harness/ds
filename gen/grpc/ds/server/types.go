// Code generated by goa v3.11.3, DO NOT EDIT.
//
// ds gRPC server types
//
// Command:
// $ goa gen ds/design

package server

import (
	ds "ds/gen/ds"
	dsviews "ds/gen/ds/views"
	dspb "ds/gen/grpc/ds/pb"
)

// NewProtoAccountMgmtCollection builds the gRPC response type from the result
// of the "list" endpoint of the "ds" service.
func NewProtoAccountMgmtCollection(result dsviews.AccountMgmtCollectionView) *dspb.AccountMgmtCollection {
	message := &dspb.AccountMgmtCollection{}
	message.Field = make([]*dspb.AccountMgmt, len(result))
	for i, val := range result {
		message.Field[i] = &dspb.AccountMgmt{
			Id:          int32(*val.ID),
			Uuid:        *val.UUID,
			Clusterurl:  *val.Clusterurl,
			Accountname: *val.Accountname,
		}
	}
	return message
}

// NewDemoPayload builds the payload of the "demo" endpoint of the "ds" service
// from the gRPC request type.
func NewDemoPayload(message *dspb.DemoRequest) *ds.DemoPayload {
	v := &ds.DemoPayload{
		A: int(message.A),
		B: int(message.B),
	}
	return v
}

// NewProtoDemoResponse builds the gRPC response type from the result of the
// "demo" endpoint of the "ds" service.
func NewProtoDemoResponse(result int) *dspb.DemoResponse {
	message := &dspb.DemoResponse{}
	message.Field = int32(result)
	return message
}
