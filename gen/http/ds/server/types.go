// Code generated by goa v3.11.3, DO NOT EDIT.
//
// ds HTTP server types
//
// Command:
// $ goa gen ds/design

package server

import (
	ds "ds/gen/ds"
	dsviews "ds/gen/ds/views"
)

// CompleteRequestBody is the type of the "ds" service "complete" endpoint HTTP
// request body.
type CompleteRequestBody struct {
	// referer
	Referer *string `form:"referer,omitempty" json:"referer,omitempty" xml:"referer,omitempty"`
	// gaClientId
	GaClientID *string `form:"gaClientId,omitempty" json:"gaClientId,omitempty" xml:"gaClientId,omitempty"`
	// visitorToken
	VisitorToken *string `form:"visitorToken,omitempty" json:"visitorToken,omitempty" xml:"visitorToken,omitempty"`
}

// AccountMgmtResponseCollection is the type of the "ds" service "list"
// endpoint HTTP response body.
type AccountMgmtResponseCollection []*AccountMgmtResponse

// CompleteResponseBody is the type of the "ds" service "complete" endpoint
// HTTP response body.
type CompleteResponseBody struct {
	// UUID is the the unique id of this Account
	UUID string `form:"uuid" json:"uuid" xml:"uuid"`
	// email of this user
	Email string `form:"email" json:"email" xml:"email"`
	// name of this user
	Name string `form:"name" json:"name" xml:"name"`
	// Tells in which cluster does this account operates in
	Clusterurl string `form:"clusterurl" json:"clusterurl" xml:"clusterurl"`
	// Name of the Account/Company
	Accountname string `form:"accountname" json:"accountname" xml:"accountname"`
}

// AccountMgmtResponse is used to define fields on response body types.
type AccountMgmtResponse struct {
	// ID is an integer type unique id of this DB entity of account.
	ID int `form:"id" json:"id" xml:"id"`
	// UUID is the the unique id of this Account
	UUID string `form:"uuid" json:"uuid" xml:"uuid"`
	// Tells in which cluster does this account operates in
	Clusterurl string `form:"clusterurl" json:"clusterurl" xml:"clusterurl"`
	// Name of the Account/Company
	Accountname string `form:"accountname" json:"accountname" xml:"accountname"`
}

// NewAccountMgmtResponseCollection builds the HTTP response body from the
// result of the "list" endpoint of the "ds" service.
func NewAccountMgmtResponseCollection(res dsviews.AccountMgmtCollectionView) AccountMgmtResponseCollection {
	body := make([]*AccountMgmtResponse, len(res))
	for i, val := range res {
		body[i] = marshalDsviewsAccountMgmtViewToAccountMgmtResponse(val)
	}
	return body
}

// NewCompleteResponseBody builds the HTTP response body from the result of the
// "complete" endpoint of the "ds" service.
func NewCompleteResponseBody(res *dsviews.UserResourceView) *CompleteResponseBody {
	body := &CompleteResponseBody{
		UUID:        *res.UUID,
		Email:       *res.Email,
		Name:        *res.Name,
		Clusterurl:  *res.Clusterurl,
		Accountname: *res.Accountname,
	}
	return body
}

// NewCompletePayload builds a ds service complete endpoint payload.
func NewCompletePayload(body *CompleteRequestBody, token string) *ds.CompletePayload {
	v := &ds.CompletePayload{
		Referer:      body.Referer,
		GaClientID:   body.GaClientID,
		VisitorToken: body.VisitorToken,
	}
	v.Token = &token

	return v
}

// NewDemoPayload builds a ds service demo endpoint payload.
func NewDemoPayload(a int, b int) *ds.DemoPayload {
	v := &ds.DemoPayload{}
	v.A = a
	v.B = b

	return v
}
